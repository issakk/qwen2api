openapi: 3.0.0
info:
  title: Go API Proxy Service
  description: An API proxy service for Qwen models, compatible with OpenAI's API standards.
  version: "1.0.0"
servers:
  - url: http://localhost:8080
    description: Local development server

paths:
  /v1/models:
    get:
      summary: Get Model List
      description: Retrieves a list of available models, formatted to be compatible with OpenAI's model list structure.
      operationId: getModels
      security:
        - bearerAuth: []
      responses:
        '200':
          description: A list of available models.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelList'
              example:
                object: "list"
                data:
                  - id: "qwen3-coder-plus"
                    object: "model"
                    created: 1686935000
                    owned_by: "qwen"
                  - id: "qwen3-coder-flash"
                    object: "model"
                    created: 1686935000
                    owned_by: "qwen"
        '401':
          description: Unauthorized.

  /v1/chat/completions:
    post:
      summary: Chat Proxy Endpoint
      description: Proxies chat completion requests to the upstream Qwen API at `portal.qwen.ai`. It can handle both streaming and non-streaming requests.
      operationId: chatCompletions
      security:
        - bearerAuth: []
      requestBody:
        description: Request body for chat completions. Can be a standard OpenAI chat completion request.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                stream:
                  type: boolean
                  description: Whether to stream the response.
              example:
                model: "qwen-turbo"
                messages:
                  - role: "user"
                    content: "Hello"
      responses:
        '200':
          description: Successful response from the upstream API. The response body is passed through from the upstream service.
          content:
            application/json:
              schema:
                type: object
            text/event-stream:
              schema:
                type: string
        '401':
          description: Unauthorized.
        '503':
          description: No available tokens to authenticate with the upstream service.

  /api/upload-token:
    post:
      summary: Upload New Token
      description: Uploads a new access and refresh token pair to be used by the proxy service.
      operationId: uploadToken
      security:
        - bearerAuth: []
      requestBody:
        description: A new token pair to be added to the token pool.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Token'
      responses:
        '200':
          description: Token uploaded successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Token uploaded successfully
        '400':
          description: Invalid request body or missing tokens.
        '405':
          description: Only POST method is allowed.
        '401':
          description: Unauthorized.
        '500':
          description: Failed to save the token.

  /api/token-status:
    get:
      summary: View Token Status
      description: Retrieves a list of current tokens, showing a preview of each access token.
      operationId: getTokenStatus
      security:
        - bearerAuth: []
      responses:
        '200':
          description: A list of token statuses.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TokenStatus'
        '405':
          description: Only GET method is allowed.
        '401':
          description: Unauthorized.

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: |
        A single `Authorization` header is used for all authentications. The prefix of the token determines its type:
        - **Service API Key (for `/api/*` endpoints):** Use the service `API_KEY` (e.g., starting with `sk-`).
        - **Upstream Access Token (for `/v1/*` endpoints):** Use the `access_token` from the upstream service (e.g., Qwen).
  schemas:
    Model:
      type: object
      properties:
        id:
          type: string
          description: The model identifier.
          example: "qwen3-coder-plus"
        object:
          type: string
          description: The object type, always "model".
          example: "model"
        created:
          type: integer
          format: int64
          description: The timestamp when the model was created.
          example: 1686935000
        owned_by:
          type: string
          description: The owner of the model.
          example: "qwen"
    ModelList:
      type: object
      properties:
        object:
          type: string
          description: The object type, always "list".
          example: "list"
        data:
          type: array
          items:
            $ref: '#/components/schemas/Model'
    Token:
      type: object
      required:
        - access_token
        - refresh_token
      properties:
        access_token:
          type: string
          description: The access token for API authentication.
        refresh_token:
          type: string
          description: The refresh token to obtain a new access token.
    TokenStatus:
      type: object
      properties:
        access_token_preview:
          type: string
          description: A preview of the access token (first 8 characters).
          example: "12345678..."